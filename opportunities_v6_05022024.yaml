openapi: 3.0.0
info:
  title: Developer V6 API - Opportunities
  version: 1.0.0
servers:
  - url: https://dpdhlstg.edcastpreview.com
  - url: https://dpdhlsandbox.edcast.com
paths:
  /api/developer/v6/opportunities/recommended:
    get:
      tags:
        - default
      summary: Fetch recommended job or role based on user_id
      parameters:
        - name: X-API-KEY
          in: header
          schema:
            type: string
          description: Use API key from Developer API credentials
          example: '{{dev6_api_key}}'
        - name: X-ACCESS-TOKEN
          in: header
          schema:
            type: string
          description: JWT Access Token generated from Auth request
          example: '{{dev6_access_token}}'
        - name: user_id
          in: query
          description: "User id, Supported format ID-, EMAIL-, EXT-"
          required: true
          schema:
            type: string
        - name: opportunity_type
          in: query
          description: "Opportunity type of either job_vacancy or job_role, default: job_role"
          required: false
          schema:
            type: string
        - name: iso_language
          in: query
          required: false
          schema:
            type: string
        - name: recommendations_count
          in: query
          required: false
          schema:
            type: integer
            default: 15
            maximum: 100
            minimum: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOpportunityMatchResultDtoArrayResponse'
        '404':
          description: Profile not found in opportunity marketplace
          content:
            application/json:
              examples:
                UserOpportunityMatchResultDtoResponseError:
                  $ref: '#/components/examples/UserOpportunityMatchResultDtoResponseError'
  /api/developer/v6/opportunities:
    get:
      summary: List all job opportunities
      parameters:
        - name: user_id
          in: query
          description: "User id, Supported format ID-, EMAIL-, EXT-"
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: "Page number. Default: 1"
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: "Number of opportunities. Default: 15"
          required: false
          schema:
            type: integer
        - name: reference_number
          in: query
          description: "Reference number"
          required: false
          schema:
            type: string
        - name: source
          in: query
          description: "source of job opportunity"
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: "Status of job opportunity"
          required: false
          schema:
            type: string
        - name: start_date_time
          in: query
          description: "Start date time of job opportunity"
          required: false
          schema:
            type: string
        - name: end_date_time
          in: query
          description: "Start date time of job opportunity"
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of job opportunities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Opportunity'
    post:
      summary: Create opportunity
      parameters:
        - name: user_id
          in: query
          description: User id, Supported format ID-, EMAIL-, EXT-
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  status:
                    type: string
                  source:
                    type: string
                  start_date_time:
                    type: string
                  end_date_time:
                    type: string
  /api/developer/v6/opportunities/{id}:
    get:
      summary: Fetch opportunity based on job_vacancy_id
      parameters:
        - name: user_id
          in: query
          description: "User id, Supported format ID-, EMAIL-, EXT-"
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: "Id of either job_vacancy or job_role, default: job_vacancy_id"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A job opportunity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Opportunity'
    put:
      summary: Update opportunity based on job_vacancy_id or job_role_id
      parameters:
        - name: user_id
          in: query
          description: "User id, Supported format ID-, EMAIL-, EXT-"
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: "Id of either job_vacancy or job_role, default: job_vacancy_id"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  status:
                    type: string
                  source:
                    type: string
                  start_date_time:
                    type: string
                  end_date_time:
                    type: string
    delete:
      summary: Delete opportunity based on job_vacancy_id or job_role_id
      parameters:
        - name: user_id
          in: query
          description: "User id, Supported format ID-, EMAIL-, EXT-"
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: "Id of either job_vacancy or job_role, default: job_vacancy_id"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  status:
                    type: string
                  source:
                    type: string
                  start_date_time:
                    type: string
                  end_date_time:
                    type: string
  /api/developer/v6/opportunities/tm_config:
    get:
      summary: Get Talent Marketplace config values
      parameters:
        - name: type
          in: query
          description: "Type is nodes from tm_config. Valid Types: talent_marketplace, labels, lovs, configurations, opportunities, aspirations, superadmin_config. Default: Passing all tm_config"
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
components:
  examples:
    UserOpportunityMatchResultDtoResponseError:
      value:
        - timestamp: "2022-10-27T14:21:02.755+00:00"
          status: 404
          error: "Not Found"
          message:  "Profile not found in opportunity marketplace"
  schemas:
    UserOpportunityMatchResultDtoArrayResponse:
      type: array
      items:
        anyOf:
          - $ref: '#/components/schemas/UserOpportunityMatchResultDtoExample1'
          - $ref: '#/components/schemas/UserOpportunityMatchResultDtoExample2'
    UserOpportunityMatchResultDto:
      properties:
        opportunity_type:
          type: string
          enum: [job_role, job_vacancy]
        id:
          maxLength: 250
          minLength: 0
          type: string
        title:
          type: string
        overall_score:
          type: integer
        overall_score_status:
          type: string
        is_bookmarked:
          type: string
        is_dismissed:
          type: string
        is_aspirational:
          type: string
        has_open_jobs:
          type: string
      required:
        - id
      type: object
      example:
        opportunity_type: job_role
        id: id0001
        title: Junior Software Developer
        overall_score: 80
        overall_score_status: EXCELLENT
        is_bookmarked: true
        is_dismissed: false
        is_aspirational: false
        has_open_jobs: false
    UserOpportunityMatchResultDtoExample1:
      example:
        opportunity_type: job_role
        id: id0001
        title: Junior Software Developer
        overall_score: 80
        overall_score_status: EXCELLENT
        is_bookmarked: true
        is_dismissed: false
        is_aspirational: false
        has_open_jobs: false
    UserOpportunityMatchResultDtoExample2:
      example:
        opportunity_type: job_role
        id: id0002
        title: Regular Software Developer
        overall_score: 70
        overall_score_status: EXCELLENT
        is_bookmarked: true
        is_dismissed: false
        is_aspirational: false
        has_open_jobs: false
    Opportunity:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        status:
          type: string
        source:
          type: string
        start_date_time:
          type: string
        end_date_time:
          type: string