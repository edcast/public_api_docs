openapi: 3.0.0
info:
  title: Developer V6 API - Opportunities
  version: 1.0.0
servers:
  - url: https://dpdhlstg.edcastpreview.com
  - url: https://dpdhlsandbox.edcast.com
paths:
  /api/developer/v6/opportunities/recommended:
    get:
      tags:
        - default
      summary: Fetch recommended job or role based on user_id
      parameters:
        - name: X-API-KEY
          in: header
          schema:
            type: string
          description: Use API key from Developer API credentials
          example: '{{dev6_api_key}}'
        - name: X-ACCESS-TOKEN
          in: header
          schema:
            type: string
          description: JWT Access Token generated from Auth request
          example: '{{dev6_access_token}}'
        - name: user_id
          in: query
          required: false
          schema:
            type: string
        - name: opportunity_type
          in: query
          required: false
          schema:
            type: string
        - name: iso_language
          in: query
          required: false
          schema:
            type: string
        - name: recommendations_count
          in: query
          required: false
          schema:
            type: integer
            default: 15
            maximum: 100
            minimum: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOpportunityMatchResultDtoArrayResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                UserOpportunityMatchResultDtoResponseError:
                  $ref: '#/components/examples/UserOpportunityMatchResultDtoResponseError'
components:
  examples:
    UserOpportunityMatchResultDtoResponseError:
      value:
        - timestamp: "2022-10-27T14:21:02.755+00:00"
          status: 401
          error: "Unauthorized"
          message:  "401 UNAUTHORIZED"
  schemas:
    UserOpportunityMatchResultDtoArrayResponse:
      type: array
      items:
        anyOf:
          - $ref: '#/components/schemas/UserOpportunityMatchResultDtoExample1'
          - $ref: '#/components/schemas/UserOpportunityMatchResultDtoExample2'
    UserOpportunityMatchResultDto:
      properties:
        type:
          type: string
          enum: [job, role]
        id:
          maxLength: 250
          minLength: 0
          type: string
        title:
          type: string
        overallScore:
          type: integer
        overallScoreStatus:
          type: string
        isBookmarked:
          type: string
        isDismissed:
          type: string
        isAspirational:
          type: string
        hasOpenJobs:
          type: string
        bookmarkedCount:
          type: number
        appliedCount:
          type: number
      required:
        - id
      type: object
      example:
        type: role
        id: id0001
        title: Junior Software Developer
        overallScore: 80
        overallScoreStatus: EXCELLENT
        isBookmarked: true
        isDismissed: false
        isAspirational: false
        hasOpenJobs: false
        bookmarkedCount: 0
        appliedCount: 0
    UserOpportunityMatchResultDtoExample1:
      example:
        type: role
        id: id0001
        title: Junior Software Developer
        overallScore: 80
        overallScoreStatus: EXCELLENT
        isBookmarked: true
        isDismissed: false
        isAspirational: false
        hasOpenJobs: false
        bookmarkedCount: 0
        appliedCount: 0
    UserOpportunityMatchResultDtoExample2:
      example:
        type: role
        id: id0002
        title: Regular Software Developer
        overallScore: 70
        overallScoreStatus: EXCELLENT
        isBookmarked: true
        isDismissed: false
        isAspirational: false
        hasOpenJobs: false
        bookmarkedCount: 0
        appliedCount: 0